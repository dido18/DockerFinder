version: "2"
services:
#####################################################
###############   ANALYSIS PHASE ####################
#####################################################
  crawler:
    build:
      context: analysis
      dockerfile: ./Dockerfile_crawler
    command: [crawl, '--save-url=/data/crawler/lasturl.txt',
              '--amqp-url=amqp://guest:guest@rabbitmq:5672',
              '--images-url=http://images_server:3000/api/images/',
               '--queue=images'] #,'--mi=100'] #, '--fp=100', '--ps=10']
    volumes:
        - /data/crawler/

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    restart: on-failure:3
    restart: always
    ports:
      - 8082:15672
    volumes:
      - /var/lib/rabbitmq

  # scanner service
  scanner:
    build:
      context: analysis
      dockerfile: ./Dockerfile_scanner
    command: [run, '--images-url=http://images_server:3000/api/images/',
                '--queue=images', '--key=images.scan',
                '--software-url=http://software_server:3001/api/software',
                '--rmi']
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#####################################################
###############   DISCOVERY PHASE ####################
#####################################################

  # Web Software
  software_server:
    build: discovery/softwareService/software_server
    ports:
      - "3001:3001"

  # Software database
  software_db:
    image: mongo:3
    volumes:
      - /data/db

  webapp:
    build: discovery/webapp/
    ports:
      - 80:80
    volumes:
      - /home/dido/github/DockerFinder/discovery/webapp:/code



#####################################################
###############   STORAGE PHASE ####################
#####################################################

  # Web images
  images_server:
    build: storage/images_server
    restart: on-failure:3
    ports:
      - "3000:3000"

  # Images database
  images_db:
    image: mongo:3
    volumes:
      - /data/db
    # /data/db is the deafult directory where mogno container store the databases.
